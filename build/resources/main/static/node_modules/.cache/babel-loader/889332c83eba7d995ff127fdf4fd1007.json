{"ast":null,"code":"var _jsxFileName = \"/Users/davidnogueira/Documents/My Projects/MarsRoverAPI/src/main/resources/static/src/Components/ImageSlideshow/ImageSlideshow.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport { ImageSlideshowMainDiv, SlideshowBlackBackDrop, SlideshowGreyBackDrop, SlideshowImg, BtnDiv, SlideshowBtn, NoImages, ImageDescriptionDiv, DescriptionLine, DownloadMessage } from \"./ImageSlideshowStyles\";\nimport { Context } from \"../../App\";\nimport moment from \"moment\";\nimport Axios from \"axios\";\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nconst ImageSlideshow = () => {\n  const [activeImage, setActiveImage] = useState(0);\n  const [fileName, setFileName] = useState(\"\");\n  const [isImageDownloaded, setIsImageDownloaded] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const context = useContext(Context);\n\n  const changeActiveImage = type => {\n    if (type === \"BACK\") {\n      if (activeImage > 0) {\n        setActiveImage(activeImage - 1);\n      }\n    }\n\n    if (type === \"NEXT\") {\n      if (activeImage < context.state.length - 1) {\n        if (isImageDownloaded) {\n          setIsImageDownloaded(false);\n        }\n\n        setActiveImage(activeImage + 1);\n      }\n    }\n  };\n\n  const images = context.state.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BtnDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SlideshowBtn, {\n    onClick: event => changeActiveImage(\"BACK\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(SlideshowBtn, {\n    onClick: event => changeActiveImage(\"NEXT\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ImageDescriptionDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DescriptionLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Image \", activeImage + 1, \" out of \", context.state.length), /*#__PURE__*/React.createElement(DescriptionLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Date selected : \", moment(context.state[activeImage].earth_date).format('MMMM Do YYYY')))), /*#__PURE__*/React.createElement(SlideshowImg, {\n    src: \"https://mars.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/02722/opgs/edr/rcam/RLB_639146082EDR_F0790654RHAZ00337M_.JPG\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BtnDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SlideshowBtn, {\n    onClick: event => {\n      debounceImageDownload();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Download\"))) : /*#__PURE__*/React.createElement(NoImages, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"No Images\"));\n\n  const handleImageDownload = async () => {\n    try {\n      const request = await Axios.get(`/download-image?url=${context.state[activeImage].img_src}`);\n\n      if (request.status === 200) {\n        console.log(request.data);\n        setFileName(request.data);\n        setIsImageDownloaded(true);\n      }\n    } catch (error) {\n      setErrors([...errors, \"failed-download\"]);\n    }\n  };\n\n  const debounceImageDownload = AwesomeDebouncePromise(handleImageDownload, 500);\n  return /*#__PURE__*/React.createElement(ImageSlideshowMainDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SlideshowBlackBackDrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SlideshowGreyBackDrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, images)), isImageDownloaded && /*#__PURE__*/React.createElement(DownloadMessage, {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Your image has been downloaded successfully as \", fileName), errors.includes(\"failed-download\") && /*#__PURE__*/React.createElement(DownloadMessage, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ImageSlideshow;","map":{"version":3,"sources":["/Users/davidnogueira/Documents/My Projects/MarsRoverAPI/src/main/resources/static/src/Components/ImageSlideshow/ImageSlideshow.tsx"],"names":["React","useState","useContext","ImageSlideshowMainDiv","SlideshowBlackBackDrop","SlideshowGreyBackDrop","SlideshowImg","BtnDiv","SlideshowBtn","NoImages","ImageDescriptionDiv","DescriptionLine","DownloadMessage","Context","moment","Axios","AwesomeDebouncePromise","FontAwesomeIcon","faChevronLeft","faChevronRight","ImageSlideshow","activeImage","setActiveImage","fileName","setFileName","isImageDownloaded","setIsImageDownloaded","errors","setErrors","context","changeActiveImage","type","state","length","images","event","earth_date","format","debounceImageDownload","handleImageDownload","request","get","img_src","status","console","log","data","error","color","includes"],"mappings":"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","sourcesContent":["import React, { FC, useState, useContext } from \"react\"\nimport { \n    ImageSlideshowMainDiv,\n    SlideshowBlackBackDrop,\n    SlideshowGreyBackDrop,\n    SlideshowImg,\n    BtnDiv,\n    SlideshowBtn,\n    NoImages,\n    ImageDescriptionDiv,\n    DescriptionLine,\n    DownloadMessage\n } from \"./ImageSlideshowStyles\";\nimport { Context } from \"../../App\";\nimport moment from \"moment\";\nimport Axios from \"axios\";\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft , faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nconst ImageSlideshow:FC = ():JSX.Element => {\n    const [activeImage , setActiveImage] = useState<number>(0);\n    const [fileName , setFileName] = useState<string>(\"\");\n    const [isImageDownloaded , setIsImageDownloaded] = useState<boolean>(false);\n    const [errors , setErrors] = useState<string[]>([]);\n    \n    const context = useContext(Context);\n\n    const changeActiveImage = (type : string) => {\n      if (type === \"BACK\") {\n        if (activeImage > 0){\n          setActiveImage(activeImage - 1)\n        }\n      }\n      if (type === \"NEXT\") {\n        if (activeImage < (context.state.length - 1)) {\n          if (isImageDownloaded) {\n            setIsImageDownloaded(false);\n          }\n          setActiveImage(activeImage + 1)\n        }\n      }\n    }\n\n    const images = context.state.length > 0 ?\n    <>\n      <BtnDiv>\n        <SlideshowBtn onClick={(event: React.MouseEvent<HTMLAnchorElement>) => changeActiveImage(\"BACK\")}>\n          <FontAwesomeIcon icon={faChevronLeft}/>\n        </SlideshowBtn>\n        <SlideshowBtn onClick={(event: React.MouseEvent<HTMLAnchorElement>) => changeActiveImage(\"NEXT\")}>\n          <FontAwesomeIcon icon={faChevronRight}/>\n        </SlideshowBtn>\n        <ImageDescriptionDiv>\n          <DescriptionLine>Image {activeImage + 1} out of {context.state.length}</DescriptionLine>\n          <DescriptionLine>Date selected : {moment(context.state[activeImage].earth_date).format('MMMM Do YYYY')}</DescriptionLine>\n        </ImageDescriptionDiv>\n      </BtnDiv>\n      <SlideshowImg src={\"https://mars.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/02722/opgs/edr/rcam/RLB_639146082EDR_F0790654RHAZ00337M_.JPG\"}/>\n      <BtnDiv>\n        <SlideshowBtn onClick={(event:React.MouseEvent<HTMLAnchorElement>) => {debounceImageDownload();}}>Download</SlideshowBtn>\n      </BtnDiv>\n    </>\n    :\n  <NoImages>\n    <h1>No Images</h1>\n  </NoImages>\n\n  const handleImageDownload = async () => {\n    try {\n      const request = await Axios.get(`/download-image?url=${context.state[activeImage].img_src}`);\n        if (request.status === 200) {\n            console.log(request.data)\n            setFileName(request.data)\n            setIsImageDownloaded(true);\n        }\n    } catch (error) {\n      setErrors([...errors , \"failed-download\"])\n    }\n}\n\n  const debounceImageDownload = AwesomeDebouncePromise(handleImageDownload , 500)\n\n    return (\n        <ImageSlideshowMainDiv>\n          <SlideshowBlackBackDrop>\n              <SlideshowGreyBackDrop>\n                { images }\n                </SlideshowGreyBackDrop>\n            </SlideshowBlackBackDrop>\n            {\n            isImageDownloaded &&\n            <DownloadMessage style={{color: \"green\"}}>Your image has been downloaded successfully as {fileName}</DownloadMessage>\n          }\n          {\n            errors.includes(\"failed-download\") && \n            <DownloadMessage style={{color: \"red\"}}></DownloadMessage>\n          }\n        </ImageSlideshowMainDiv>\n    )\n}\n\nexport default ImageSlideshow;"]},"metadata":{},"sourceType":"module"}