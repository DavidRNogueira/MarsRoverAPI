{"ast":null,"code":"import { createImperativePromise } from 'awesome-imperative-promise'; // see https://stackoverflow.com/a/54825370/82609\n\nfunction onlyResolvesLast(asyncFunction) {\n  var cancelPrevious = null;\n\n  var wrappedFunction = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    cancelPrevious && cancelPrevious();\n    var initialPromise = asyncFunction.apply(void 0, args);\n\n    var _a = createImperativePromise(initialPromise),\n        promise = _a.promise,\n        cancel = _a.cancel;\n\n    cancelPrevious = cancel;\n    return promise;\n  };\n\n  return wrappedFunction; // TODO fix TS\n}\n\nexport { onlyResolvesLast };","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"sEAOA;;AACA,SAAgB,gBAAhB,CACE,aADF,EACkB;AAEhB,MAAI,cAAc,GAA0B,IAA5C;;AAEA,MAAM,eAAe,GAAG,YAAA;AAAC,QAAA,IAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAyB;AAAzB,MAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACvB,IAAA,cAAc,IAAI,cAAc,EAAhC;AACA,QAAM,cAAc,GAAG,aAAa,CAAA,KAAb,CAAa,KAAA,CAAb,EAAiB,IAAjB,CAAvB;;AACM,QAAA,EAAA,GAAA,uBAAA,CAAA,cAAA,CAAA;AAAA,QAAE,OAAA,GAAA,EAAA,CAAA,OAAF;AAAA,QAAW,MAAA,GAAA,EAAA,CAAA,MAAX;;AACN,IAAA,cAAc,GAAG,MAAjB;AACA,WAAO,OAAP;AACD,GAND;;AAQA,SAAO,eAAP,CAZgB,CAYc;AAC/B","sourcesContent":["import {\n  createImperativePromise,\n  CancelCallback,\n} from 'awesome-imperative-promise';\n\ntype ArgumentsType<T> = T extends (...args: infer A) => any ? A : never;\n\n// see https://stackoverflow.com/a/54825370/82609\nexport function onlyResolvesLast<T extends (...args: any[]) => any>(\n  asyncFunction: T,\n): T {\n  let cancelPrevious: CancelCallback | null = null;\n\n  const wrappedFunction = (...args: ArgumentsType<T>) => {\n    cancelPrevious && cancelPrevious();\n    const initialPromise = asyncFunction(...args);\n    const { promise, cancel } = createImperativePromise(initialPromise);\n    cancelPrevious = cancel;\n    return promise;\n  };\n\n  return wrappedFunction as any; // TODO fix TS\n}\n"]},"metadata":{},"sourceType":"module"}