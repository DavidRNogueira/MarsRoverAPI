export declare type ResolveCallback<T> = (value: T | PromiseLike<T>) => void;
export declare type RejectCallback = (reason?: any) => void;
export declare type CancelCallback = () => void;
export declare type ImperativePromise<T> = {
    promise: Promise<T>;
    resolve: ResolveCallback<T>;
    reject: RejectCallback;
    cancel: CancelCallback;
};
export declare function createImperativePromise<T>(promiseArg?: Promise<T> | null | undefined): ImperativePromise<T>;
