{"version":3,"file":"index.es.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  createImperativePromise,\n  CancelCallback,\n} from 'awesome-imperative-promise';\n\ntype ArgumentsType<T> = T extends (...args: infer A) => any ? A : never;\n\n// see https://stackoverflow.com/a/54825370/82609\nexport function onlyResolvesLast<T extends (...args: any[]) => any>(\n  asyncFunction: T,\n): T {\n  let cancelPrevious: CancelCallback | null = null;\n\n  const wrappedFunction = (...args: ArgumentsType<T>) => {\n    cancelPrevious && cancelPrevious();\n    const initialPromise = asyncFunction(...args);\n    const { promise, cancel } = createImperativePromise(initialPromise);\n    cancelPrevious = cancel;\n    return promise;\n  };\n\n  return wrappedFunction as any; // TODO fix TS\n}\n"],"names":[],"mappings":";;AAOA;AACA,SAAgB,gBAAgB,CAC9B,aAAgB;IAEhB,IAAI,cAAc,GAA0B,IAAI,CAAC;IAEjD,IAAM,eAAe,GAAG;QAAC,cAAyB;aAAzB,UAAyB,EAAzB,qBAAyB,EAAzB,IAAyB;YAAzB,yBAAyB;;QAChD,cAAc,IAAI,cAAc,EAAE,CAAC;QACnC,IAAM,cAAc,GAAG,aAAa,eAAI,IAAI,CAAC,CAAC;QACxC,IAAA,4CAA6D,EAA3D,oBAAO,EAAE,kBAAkD,CAAC;QACpE,cAAc,GAAG,MAAM,CAAC;QACxB,OAAO,OAAO,CAAC;KAChB,CAAC;IAEF,OAAO,eAAsB,CAAC;CAC/B;;;;"}