{"version":3,"sources":["Images/1224px-NASA_logo.svg.png","Components/Search/SearchStyles.tsx","Components/Search/Search.tsx","Components/ImageSlideshow/ImageSlideshowStyles.tsx","Components/ImageSlideshow/ImageSlideshow.tsx","App.tsx","index.js"],"names":["module","exports","SearchMainDiv","styled","div","HeaderDiv","SearchHeader","h1","SearchDescription","p","NasaImg","img","DateDiv","DateInput","input","SubmitDate","a","Search","useState","date","setDate","context","useContext","Context","handleSubmit","formattedDate","moment","format","axios","get","request","status","console","log","data","dispatch","type","payload","src","NasaLogo","onChange","event","currentTarget","value","onClick","ImageSlideshowMainDiv","SlideshowBlackBackDrop","SlideshowGreyBackDrop","ImageDiv","SlideshowImg","SlideshowBtn","BtnDiv","NoImages","ImageDescriptionDiv","DescriptionLine","DownloadMessage","strong","ImageSlideshow","activeImage","setActiveImage","fileName","setFileName","isImageDownloaded","setIsImageDownloaded","errors","setErrors","changeActiveImage","state","length","images","icon","faChevronLeft","faChevronRight","earth_date","img_src","debounceImageDownload","handleImageDownload","Axios","AwesomeDebouncePromise","style","color","includes","initState","React","createContext","reducer","action","App","useReducer","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e91e13a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1224px-NASA_logo.svg.ae42d855.png\";","import styled from \"styled-components\"\n\nexport const SearchMainDiv = styled.div `\ndisplay:flex;\nbackground-color:#0b3d91;\njustify-content:center;\npadding:1em;\n`\nexport const HeaderDiv = styled.div `\ndisplay:flex;\nflex-direction:column;\nmargin: 1em 0.5em 1em 0.5em;\ncolor:white;\n`\n\nexport const SearchHeader = styled.h1 `\nmargin:0;\n`\n\nexport const SearchDescription = styled.p `\nmargin:0;\n`\n\nexport const NasaImg = styled.img `\nwidth:10em;\njustify-self:center;\n`\n\nexport const DateDiv = styled.div `\ndisplay:flex;\nflex-direction:row;\nalign-items:center;\njustify-content:space-evenly;\nmargin-top:0.5em;\n`\n\nexport const DateInput = styled.input `\nline-height:1.75em;\nfont-size:1.25em;\nfont-family:inherit;\nwidth:40%;\ntext-align:center;\n`\n\nexport const SubmitDate = styled.a `\ntext-decoration:none;\ncolor: black;\nbackground-color: #fc3d21;\npadding:0.75em 1.25em 0.75em 1.25em;\nborder-radius:10px;\ncursor: pointer;\n\n:visited {\n    color:black;\n}\n\n:hover {\n    background-color:orange;\n}\n`","import React , { FC, useState, useContext } from \"react\"\nimport { \n    SearchMainDiv, \n    SearchHeader, \n    SearchDescription,\n    NasaImg,\n    HeaderDiv,\n    DateInput,\n    DateDiv,\n    SubmitDate\n} from \"./SearchStyles\"\nimport NasaLogo from \"../../Images/1224px-NASA_logo.svg.png\"\nimport axios from \"axios\"\nimport moment from \"moment\"\nimport { Context } from \"../../App\"\n\nconst Search:FC = ():JSX.Element => {\n    const [date , setDate] = useState<string>(\"\");\n    const context = useContext(Context)\n\n    const handleSubmit = async () => {\n        const formattedDate = moment(date).format(\"YYYY-M-D\")\n        const request = await axios.get(`/get-images-by-date?date=${formattedDate}`);\n            if (request.status === 200) {\n                console.log(request.data)\n                context.dispatch({\n                    type:\"SET_IMAGES\" ,\n                    payload : request.data\n                })\n            }\n    }\n\n    return (\n        <SearchMainDiv>\n            <NasaImg src={NasaLogo}/>\n            <HeaderDiv>\n                <SearchHeader>Search</SearchHeader>\n                <SearchDescription>Enter a date to get a slideshow of all images from Mars for that day.</SearchDescription>\n                <DateDiv>\n                    <DateInput type=\"date\" onChange={(event:React.ChangeEvent<HTMLInputElement>) => setDate(event.currentTarget.value)} value={date}/>\n                    <SubmitDate onClick={handleSubmit}>Submit</SubmitDate>\n                </DateDiv>\n            </HeaderDiv>\n        </SearchMainDiv>\n    )\n}\n\nexport default Search;","import styled from \"styled-components\"\n\nexport const ImageSlideshowMainDiv = styled.div `\ndisplay:flex;\nflex-direction:column;\nmargin-top:1em;\n`\n\nexport const SlideshowBlackBackDrop = styled.div `\nwidth:90%;\nheight:70vh;\nbackground-color:black;\nmargin:auto;\n\ndisplay:flex;\nalign-items:center;\njustify-content:center;\n`\nexport const SlideshowGreyBackDrop = styled.div `\nwidth:95%;\nheight:65vh;\nbackground-color:grey;\nmargin:auto;\n\ndisplay:flex;\njustify-content:space-around;\n`\n\nexport const ImageDiv = styled.div `\nwidth:700px;\nheight:100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center\n`\n\nexport const SlideshowImg = styled.img `\nbackground-color:grey;\nmax-width: 100%;\nmax-height: 100%;\nalign-self:center;\n`\n\nexport const SlideshowBtn = styled.a `\ntext-decoration:none;\ncolor: black;\nbackground-color: #fc3d21;\npadding:0.75em 1.25em 0.75em 1.25em;\nborder-radius:10px;\ncursor: pointer;\nmargin:0.5em;\n\n:visited {\n    color:black;\n}\n\n:hover {\n    background-color:orange;\n}\n`\n\nexport const BtnDiv = styled.div `\nalign-self:flex-end;\nmargin-bottom:2em;\n`\n\nexport const NoImages = styled.div `\nalign-self:center;\n`\nexport const ImageDescriptionDiv = styled.div `\ndisplay:flex;\nflex-direction:column;\nmargin-top:2em;\nalign-self:flex-end;\n`\nexport const DescriptionLine = styled.p `\nmargin:0;\n`\n\nexport const DownloadMessage = styled.strong `\nmargin:0.5em auto 0 auto;\nfont-size:1.75em;\n`","import React, { FC, useState, useContext } from \"react\"\nimport { \n    ImageSlideshowMainDiv,\n    SlideshowBlackBackDrop,\n    SlideshowGreyBackDrop,\n    SlideshowImg,\n    BtnDiv,\n    SlideshowBtn,\n    NoImages,\n    ImageDescriptionDiv,\n    DescriptionLine,\n    DownloadMessage,\n    ImageDiv\n } from \"./ImageSlideshowStyles\";\nimport { Context } from \"../../App\";\nimport moment from \"moment\";\nimport Axios from \"axios\";\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft , faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nconst ImageSlideshow:FC = ():JSX.Element => {\n    const [activeImage , setActiveImage] = useState<number>(0);\n    const [fileName , setFileName] = useState<string>(\"\");\n    const [isImageDownloaded , setIsImageDownloaded] = useState<boolean>(false);\n    const [errors , setErrors] = useState<string[]>([]);\n    \n    const context = useContext(Context);\n\n    const changeActiveImage = (type : string) => {\n      if (type === \"BACK\") {\n        if (activeImage > 0){\n          setActiveImage(activeImage - 1)\n        }\n      }\n      if (type === \"NEXT\") {\n        if (activeImage < (context.state.length - 1)) {\n          if (isImageDownloaded) {\n            setIsImageDownloaded(false);\n          }\n          setActiveImage(activeImage + 1)\n        }\n      }\n    }\n\n    const images = context.state.length > 0 ?\n    <>\n      <BtnDiv>\n        <SlideshowBtn onClick={(event: React.MouseEvent<HTMLAnchorElement>) => changeActiveImage(\"BACK\")}>\n          <FontAwesomeIcon icon={faChevronLeft}/>\n        </SlideshowBtn>\n        <SlideshowBtn onClick={(event: React.MouseEvent<HTMLAnchorElement>) => changeActiveImage(\"NEXT\")}>\n          <FontAwesomeIcon icon={faChevronRight}/>\n        </SlideshowBtn>\n        <ImageDescriptionDiv>\n          <DescriptionLine>Image {activeImage + 1} out of {context.state.length}</DescriptionLine>\n          <DescriptionLine>Date selected : {moment(context.state[activeImage].earth_date).format('MMMM Do YYYY')}</DescriptionLine>\n        </ImageDescriptionDiv>\n      </BtnDiv>\n      <ImageDiv>\n        <SlideshowImg src={context.state[activeImage].img_src}/>\n      </ImageDiv>\n      <BtnDiv>\n        <SlideshowBtn onClick={(event:React.MouseEvent<HTMLAnchorElement>) => {debounceImageDownload();}}>Download</SlideshowBtn>\n      </BtnDiv>\n    </>\n    :\n  <NoImages>\n    <h1>No Images</h1>\n  </NoImages>\n\n  const handleImageDownload = async () => {\n    try {\n      const request = await Axios.get(`/download-image?url=${context.state[activeImage].img_src}`);\n        if (request.status === 200) {\n            console.log(request.data)\n            setFileName(request.data)\n            setIsImageDownloaded(true);\n        }\n    } catch (error) {\n      setErrors([...errors , \"failed-download\"])\n    }\n}\n\n  const debounceImageDownload = AwesomeDebouncePromise(handleImageDownload , 500)\n\n    return (\n        <ImageSlideshowMainDiv>\n          <SlideshowBlackBackDrop>\n              <SlideshowGreyBackDrop>\n                  { images }\n              </SlideshowGreyBackDrop>\n            </SlideshowBlackBackDrop>\n            {\n            isImageDownloaded &&\n            <DownloadMessage style={{color: \"green\"}}>Your image has been downloaded successfully as {fileName}</DownloadMessage>\n          }\n          {\n            errors.includes(\"failed-download\") && \n            <DownloadMessage style={{color: \"red\"}}></DownloadMessage>\n          }\n        </ImageSlideshowMainDiv>\n    )\n}\n\nexport default ImageSlideshow;","import React , {FC, useReducer} from 'react';\nimport Search from './Components/Search/Search';\nimport ImageSlideshow from './Components/ImageSlideshow/ImageSlideshow';\nimport { IPhoto, IActionInterface } from './Interfaces';\n\nconst initState :(string|number)[] = []\nexport const Context = React.createContext<any>(initState);\n\nconst reducer = (state:IPhoto, action:IActionInterface) => {\n  const {type, payload} = action;\n  \n  switch (type){\n      case \"SET_IMAGES\":\n          return [...payload]\n      default:\n          return state;\n  }\n}\nconst App:FC = ():JSX.Element => {\n\n  const [state,dispatch] = useReducer<any>(reducer, initState)\n  return (\n    <Context.Provider value ={{state , dispatch}}>\n      <Search/>\n      <ImageSlideshow/>\n    </Context.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}